{
  "<code>Session</code> provides a global object on the client that you can use to store an arbitrary set of key-value pairs. Use it to store things like the currently selected item in a list.":"Session(セッション)はクライアント上のグローバルオブジェクトとして提供され、キーと値のペアのセットを格納するために使用できます。それは、リストで現在選択している項目のようなものを一時的に保持するのに使用します。",
  "What&apos;s special about <code>Session</code> is that it&apos;s <em>reactive</em>. If you call <code>Session.get(&quot;myKey&quot;)</code> in a <a href=\"#template_helpers\">template helper</a> or inside <a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a>, the relevant part of the template will be re-rendered automatically whenever <code>Session.set(&quot;myKey&quot;, newValue)</code> is called.":"<code>Session</code>が特別なのは<em>リアクティブ</em>であるところです。<a href=\"#template_helpers\">template helper</a>や<a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a>の中で、<code>Session.get(&quot;myKey&quot;)</code>と記述しておくと、どこかで<code>Session.set(&quot;myKey&quot;, newValue)</code>を呼び出した時に、テンプレートの関連する部分が自動的に再描画されます。",
  "Set a variable in the session. Notify any listeners that the value has changed (eg: redraw templates, and rerun any <a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a> computations, that called <a href=\"#session_get\"><code>Session.get</code></a> on this <code>key</code>.)":"セッションに変数をセットします。また、リスナーに値が変更されたことが通知されます(例: <code>Session.get</code>でこのキーを呼び出しているテンプレートを再描画したり、<a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a>処理を再実行します。",
  "The key to set, eg, <code>selectedItem</code>":"セッションのキー、例: <code>selectedItem</code>",
  "The new value for <code>key</code>":"<code>key</code>の新しい値",
  "Get the value of a session variable. If inside a <a href=\"#reactivity\">reactive computation</a>, invalidate the computation the next time the value of the variable is changed by <a href=\"#session_set\"><code>Session.set</code></a>. This returns a clone of the session value, so if it&apos;s an object or an array, mutating the returned value has no effect on the value stored in the session.":"セッション変数の値を取得します。もしリアクティブ処理の中では、Session.setにより変数の値が変更になった場合に処理が無効化（再計算）されます。これはセッション値のクローンを返します。そのため、それがオブジェクトまたは配列の場合、返された値を変更したとしても、セッションに格納されている値には影響を与えません。",
  "The name of the session variable to return":"値を取得したいセッション変数名",
  "Using <code>Session</code> gives us our first taste of <em>reactivity</em>, the idea that the view should update automatically when necessary, without us having to call a <code>render</code> function manually. In the next section, we will learn how to use Tracker, the lightweight library that makes this possible in Meteor.":"<code>Session</code>を使うと、<code>render</code>ファンクションを手動で呼び出すことなく、必要に応じて自動でビューを更新する<em>リアクティビティ</em>の一端に触れることができます。次のセクションでは、Meteorでこれを可能にしている軽量ライブラリTrackerの使い方を学習します。"
}