{
  "Meteor is very flexible about how you structure the files in your app. It automatically loads all of your files, so there is no need to use <code>&lt;script&gt;</code> or <code>&lt;link&gt;</code> tags to include JavaScript or CSS.":"Meteorはとても柔軟なファイル構造をしており、どこにファイルを置いても自動的に読み込まれます。そのため、CSSやJavaScriptを読み込むための<code>&lt;script&gt;</code>や<code>&lt;link&gt;</code>タグは必要ありません。",
  "If files are outside of the special directories listed below, Meteor does the following:":"もし特別なディレクトリ以外にファイルを置いた場合、Meteorは次の動きをします:",
  "If you want more control over which JavaScript code is loaded on the client and the server, you can use the special directories listed below.":"クライアントやサーバー上でもっとJavaScriptコードの制御を行いたい場合は、以下の特別なディレクトリを使うこともできます。",
  "Any files here are only served to the client. This is a good place to keep your HTML, CSS, and UI-related JavaScript code.":"ここに置いたファイルはクライアントにのみ提供されます。ここはHTMLやCSS、UI関連のJavaScriptコードを保管するのに良い場所です。",
  "Any files in this directory are only used on the server, and are never sent to the client. Use <code>/server</code> to store source files with sensitive logic or data that should not be visible to the client.":"このディレクトリに置いたファイルはサーバーでのみ使用され、クライアントには送られません。クライアントに見られたくない極秘のロジックやデータの入ったファイルは<code>/server</code>ディレクトリを使用してください。",
  "Files in <code>/public</code> are served to the client as-is. Use this to store assets such as images. For example, if you have an image located at <code>/public/background.png</code>, you can include it in your HTML with <code>&lt;img src=&apos;/background.png&apos;/&gt;</code> or in your CSS with <code>background-image: url(/background.png)</code>. Note that <code>/public</code> is not part of the image URL.":"<code>/public</code>に置いたファイルはそのままクライアントに提供されます。画像などのアセットを保管するために使用します。例えば、<code>/public/background.png</code>にイメージファイルを置くと、HTMLで<code>&lt;img src=&apos;/background.png&apos;/&gt;</code>もしくはCSSで<code>background-image: url(/background.png)</code>と記述することでそのファイルを読み込むことができます。注:<code>/public</code>は画像のURLに含まれません。",
  "These files can only be accessed by server code through <a href=\"#assets\"><code>Assets</code></a> API and are not accessible to the client.":"ここに置いたファイルはサーバーからは<a href=\"#assets\"><code>Assets</code></a> API経由でのみアクセス可能で、クライアントからはアクセスできません。",
  "Read more about file load order and special directories in the <a href=\"#/full/structuringyourapp\">Structuring Your App section</a> of the full API documentation.":"ファイルの読み込み順番と特別なディレクトリの詳細は、full API の<a href=\"#/full/structuringyourapp\">Structuring Your App section</a>をお読みください。",
  "Once you&apos;ve built your web app with Meteor, you can easily build a native wrapper for your app and publish it to the Google Play Store or iOS App Store with just a few commands. We&apos;ve put a lot of work into making the same packages and APIs work on desktop and mobile, so that you don&apos;t have to worry about a lot of the edge cases associated with mobile app development.":"ウェブアプリをMeteorで構築すると、簡単にネイティブラッパーを作成でき、わずか数コマンドでGoogle Play StoreやiOS App Storeにそのアプリを配信できます。我々はデスクトップとモバイルで同一のパッケージとAPIが動くように、多くの努力をしており、モバイルアプリ開発に関連した多くの特殊なケースについて心配する必要はありません。",
  "Install the development tools for Android or iOS with one command:":"1コマンドでAndroidまたはiOSの開発ツールをインストール:",
  "Add the relevant platform to your app:":"あなたのアプリに関連するプラットフォームを追加:",
  "You can configure your app&apos;s icons, title, version number, splash screen, and other metadata with the special <a href=\"#/full/mobileconfigjs\"><code>mobile-config.js</code> file</a>.":"特別なファイルの<a href=\"#/full/mobileconfigjs\"><code>mobile-config.js</code></a>でアプリのアイコン、タイトル、バージョン番号、スプラッシュスクリーン、その他のメタデータを設定することができます。",
  "Learn more about Meteor&apos;s mobile support on the <a href=\"https://github.com/meteor/meteor/wiki/Meteor-Cordova-Phonegap-integration\">GitHub wiki page</a>.":"<a href=\"https://github.com/meteor/meteor/wiki/Meteor-Cordova-Phonegap-integration\">GitHub wiki ページ</a>でモバイルサポートについて詳しく学ぶことができます。"
}
