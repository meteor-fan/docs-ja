{
    "Boolean variable.  True if running in client environment.": "真偽値。クライアント環境の場合Trueになる。",
    "Boolean variable.  True if running in server environment.": "真偽値。サーバ環境の場合Trueになる。",
    "<code>Meteor.isServer</code> can be used to limit where code runs, but it does not prevent code from being sent to the client. Any sensitive code that you don&apos;t want served to the client, such as code containing passwords or authentication mechanisms, should be kept in the <code>server</code> directory.": "<code>Meteor.isServer</code>はそのコードがどこで動くかを制限することには使えますが、そのコードがクライアント側に送られることは阻止しません。クライアントに送りたくない秘密のコード<code>server</code>に格納すべきです。例えば、パスワードや認証のメカニズムが含まれているコードなどが該当します。",
    "Run code when a client or a server starts.": "クライアントやサーバが起動したときにコードを実行する。",
    "A function to run on startup.": "起動時に実行する関数",
    "On the server, the callback function will run as soon as the server process is finished starting up. On the client, the callback function will run as soon as the page is ready.": "サーバ側ではコールバック関数はサーバ起動完了後すぐに実行されます。クライアント側ではコールバック関数はページが準備完了になった後すぐに実行されます。",
    "It&apos;s good practice to wrap all code that isn&apos;t inside template events, template helpers, <code>Meteor.methods</code>, <code>Meteor.publish</code>, or <code>Meteor.subscribe</code> in <code>Meteor.startup</code> so that your application code isn&apos;t executed before the environment is ready.": "ひとつのよい方法として、テンプレートイベント、テンプレートヘルパー、<code>Meteor.methods</code>、<code>Meteor.publish</code>、<code>Meteor.subscribe</code>以外のすべてのコードを<code>Meteor.startup</code>に入れてしまう方法があります。そうすると、環境が準備される前にコードが実行されてしまうことがなくなります。",
    "For example, to create some initial data if the database is empty when the server starts up, you might use the following pattern:": "例えば、サーバ起動時にデータベースが空であれば初期データを作成するためには次のようにします:",
    "If you call <code>Meteor.startup</code> on the server after the server process has started up, or on the client after the page is ready, the callback will fire immediately. <!-- XXX It should still fire asynchronously, though -->": "サーバ起動後やクライアント起動後に<code>Meteor.startup</code>を呼び出した場合はコールバック関数はすぐに実行されます。<!-- XXX ただし非同期に実行されます。 -->"
}
