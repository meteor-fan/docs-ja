{
	"Meteor servers can publish sets of documents with <code>Meteor.publish</code>, and clients can subscribe to those publications with <code>Meteor.subscribe</code>. Any documents the client subscribes to will be available through the <code>find</code> method of client collections.": "Meteorのサーバは、<code>Meteor.publish</code>メソッドによりドキュメントのセットを配信し、クライアントでは<code>Meteor.subscribe</code>メソッドで配信されたドキュメントを購読することができます。購読されたドキュメントは、クライアント側の<code>find</code>メソッドにより利用できるようになります。",
	"By default, every newly created Meteor app contains the <code>autopublish</code> package, which automatically publishes all available documents to every client. To exercise finer-grained control over what documents different clients receive, first remove <code>autopublish</code>, in your terminal:": "デフォルトでは、新規作成されたMeteorアプリケーションには<code>autopublish</code>パッケージが予め同梱されており、全ての利用可能なドキュメントは、全てのクライアントに自動で配信されます。クライアントそれぞれに配信するドキュメントをより細やかに制御したい場合、まずターミナル上で以下のコマンドを入力し、<code>autopublish</code>パッケージを削除しましょう。",
	"Now you can use <code>Meteor.publish</code> and <code>Meteor.subscribe</code> to control what documents flow from the server to its clients.": "これで、<code>Meteor.publish</code>と<code>Meteor.subscribe</code>を使って、どのドキュメントをサーバからクライアントへ流すかを制御できるようになります。",
	"Publish a record set.": "レコードのセットを配信します。",
	"Name of the record set.  If <code>null</code>, the set has no name, and the record set is automatically sent to all connected clients.": "配信するデータの名称。<code>null</code>がセットされた場合、配信されるデータには名称が設定されず、自動的に接続している全てのクライアントに配信されます。",
	"Function called on the server each time a client subscribes.  Inside the function, <code>this</code> is the publish handler object, described below.  If the client passed arguments to <code>subscribe</code>, the function is called with the same arguments.": "クライアントから購読されるたびにサーバで実行される関数。関数の処理中で<code>this</code>は、後述する配信を制御するオブジェクトを指し示します。クライアント側で<code>subscribe</code>メソッドの同引数を省略すると、サーバ側と同じ関数が実行されます。",
	"To publish data to clients, call <code>Meteor.publish</code> on the server with two arguments: the name of the record set, and a <em>publish function</em> that will be called each time a client subscribes to this record set.": "クライアントにデータを配信するには、サーバ側で以下の2つの引数をセットして<code>Meteor.publish</code>メソッドを実行します。1つは配信データの名称。もう1つは、クライアント側で配信データへの購読要求が行われるたびに呼び出される<em>配信関数</em>です。",
	"Publish functions typically return the result of calling <code>collection.find(query)</code> on some <code>collection</code> with a <code>query</code> that narrows down the set of documents to publish from that collection:": "配信関数では一般的に、配信するドキュメントのセットを<code>collection.find(query)</code>によって絞りこんで取得し返却します。",
	"You can publish documents from multiple collections by returning an array of <code>collection.find</code> results:": "<code>collection.find</code>の結果を配列として返すことで、複数のコレクションから取得したドキュメントを配信することも可能です。",
	"Inside the publish function, <code>this.userId</code> is the current logged-in user&apos;s <code>_id</code>, which can be useful for filtering collections so that certain documents are visible only to certain users. If the logged-in user changes for a particular client, the publish function will be automatically rerun with the new <code>userId</code>, so the new user will not have access to any documents that were meant only for the previous user.": "配信関数の処理内では、<code>this.userId</code>は現在ログインしているユーザの<code>_id</code>を指し示しており、これは、特定のドキュメントを特定のユーザにのみ表示するよう制限をかけるのに役立ちます。 もし、クライアントのログインユーザが変わると、配信関数は自動的に新しいユーザの<code>userId</code>を元に再実行されるため、新しいユーザは以前のユーザに対してのみ提供されていたドキュメントにはアクセスできなくなります。",
	"Subscribe to a record set.  Returns a handle that provides <code>stop()</code> and <code>ready()</code> methods.": "データの購読登録を行います。返却されるオブジェクトは、<code>stop()</code>メソッドと<code>ready()</code>メソッドを提供します。",
	"Name of the subscription.  Matches the name of the server&apos;s <code>publish()</code> call.": "購読するデータの名称。サーバ側で同じ名称が設定された<code>publish()</code>メソッドが呼び出されます。",
	"Optional arguments passed to publisher function on server.": "サーバ側の配信関数へ受け渡される引数を任意で設定する。",
	"Optional. May include <code>onStop</code> and <code>onReady</code> callbacks. If there is an error, it is passed as an argument to <code>onStop</code>. If a function is passed instead of an object, it is interpreted as an <code>onReady</code> callback.": "任意で設定可能。<code>onStop</code>メソッドと<code>onReady</code>メソッドを含めることができます。エラーが発生した場合は<code>onStop</code>メソッドの引数となります。オブジェクトの代わりに関数が渡された場合、<code>onReady</code>メソッドのコールバック関数として解釈されます。",
	"Clients call <code>Meteor.subscribe</code> to express interest in document collections published by the server. Clients can further filter these collections of documents by calling <a href=\"#find\"><code>collection.find(query)</code></a>. Whenever any data that was accessed by a publish function changes on the server, the publish function is automatically rerun and the updated document collections are pushed to the subscribed client.":"クライアント側で<code>Meteor.subscribe</code>メソッドを呼び出すことで、サーバから配信されたドキュメントのコレクションに対する関係性を明示します。クライアント側で<a href=\"#find\"><code>collection.find(query)</code></a>を使うと、ドキュメントのコレクションを更に絞り込んで取得することもできます。サーバ側で配信関数が手に入れたデータに変更があった場合、配信関数は自動的に再実行され、更新されたドキュメントのコレクションは購読中のクライアントへと送り出されます。",
	"The <code>onReady</code> callback is called with no arguments when the server has sent all of the initial data for the subscription. The <code>onStop</code> callback is when the subscription is terminated for any reason; it receives a <a href=\"#meteor_error\"><code>Meteor.Error</code></a> if the subscription failed due to a server-side error.": "<code>onReady</code>メソッドは、購読の初期化に必要なデータをサーバが送り終えた時に、引数無しで実行されます。<code>onStop</code>メソッドは、何らかの理由で購読が終了した時に実行されます。サーバ側でのエラーなどにより購読に失敗すると、<a href=\"#meteor_error\"><code>Meteor.Error</code></a>を受け取ります。",
	"<code>Meteor.subscribe</code> returns a subscription handle, which is an object with the following methods:": "<code>Meteor.subscribe</code>メソッドは戻り値として、購読を制御する以下のメソッドを持ったオブジェクトを返します。",
	"Cancel the subscription. This will typically result in the server directing the client to remove the subscription&apos;s data from the client&apos;s cache.": "購読を中止します。通常 購読を中止すると、キャッシュから購読のためのデータを削除するよう、サーバからクライアントへ命令が出されます。",
	"Returns true if the server has <a href=\"#publish_ready\">marked the subscription as ready</a>. A reactive data source.": "<a href=\"#publish_ready\">購読の準備が整った</a>とサーバが判断した場合にTrueが返されます。",
	"If you call <code>Meteor.subscribe</code> inside <a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a>, the subscription will be cancelled automatically whenever the computation reruns (so that a new subscription can be created, if appropriate), meaning you don&apos;t have to to call <code>stop</code> on subscriptions made from inside <code>Tracker.autorun</code>.": "<a href=\"#tracker_autorun\"><code>Tracker.autorun</code></a>メソッドの内部で<code>Tracker.autorun</code>メソッドが呼ばれた場合、処理が再実行されるたび自動的に購読は中止されます。（結果的に、新規の購読は適切な手順で作成することができます。）つまり、<code>Tracker.autorun</code>メソッドの内部で生成された購読を停止させるために<code>stop</code>メソッドを呼び出す必要はないのです。"
}
