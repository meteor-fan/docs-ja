{
  "HTML templates are compiled and sent to the client. See <a href=\"#/basic/templates\">the templates section</a> for more details.": "HTMLテンプレートはコンパイルされクライアントに送られます。詳細は<a href=\"#/basic/templates\">テンプレート</a>をご確認ください。",
  "CSS files are sent to the client. In production mode they are automatically concatenated and minified.": "CSSファイルはクライアントに送られます。プロダクションモードでは、それらは自動的に結合されミニファイされます。",
  "JavaScript is loaded on the client and the server. You can use <code>Meteor.isClient</code> and <code>Meteor.isServer</code> to control where certain blocks of code run.": "JavaScriptはクライアントとサーバーの両方で読み込まれます。<code>Meteor.isClient</code>と<code>Meteor.isServer</code>を使うと、クライアントまたはサーバーでのみコードを実行できます。",
  "<code>{{#each data}} ... {{/each}}</code> - Iterate over the items in <code>data</code> and display the HTML inside the block for each one.": "<code>{{#each data}} ... {{/each}}</code> - <code>data</code>の要素について繰り返し、それぞれについてブロック内のHTMLを表示する",
  "<code>{{#if data}} ... {{else}} ... {{/if}}</code> - If <code>data</code> is <code>true</code>, display the first block; if it is false, display the second one.": "<code>{{#if data}} ... {{else}} ... {{/if}}</code> - もし<code>data</code>が<code>true</code>ならば、ひとつ目のブロックを表示する; falseならば、ふたつ目のブロックを表示する",
  "<code>{{#with data}} ... {{/with}}</code> - Set the data context of the HTML inside, and display it.": "<code>{{#with data}} ... {{/with}}</code> - ブロック内のHTMLをデータコンテキストを設定して、表示する",
  "The value of <code>this</code> in the <code>created</code>, <code>rendered</code>, and <code>destroyed</code> template callbacks": "<code>created</code>や<code>rendered</code>や<code>destroyed</code>のコールバック内の<code>this</code>の値",
  "The second argument to event handlers": "イベントハンドラの第二引数",
  "As <a href=\"#template_instance\"><code>Template.instance()</code></a> inside helpers": "ヘルパー関数内での<a href=\"#template_instance\"><code>Template.instance()</code></a>",
  "<code>accounts-ui</code>: This package allows you to use <code>{{&gt; loginButtons}}</code> in your templates to add an automatically generated UI that will let users log into your app. There are several community alternatives to this package that change the appearance, or you can not use it and use the <a href=\"#accounts\">advanced Accounts methods</a> instead.": "<code>accounts-ui</code>: このパッケージはテンプレートで<code>{{&gt; loginButtons}}</code>を使えるようにするもので、アプリのログイン機能のUIが自動で生成されまます。これ以外にも複数のコミュニティパッケージがあり、表示スタイルを変更することができます。また、これらを使わなくても<a href=\"#accounts\">advanced Accounts methods</a>のAPIを直接使うこともできます。",
  "<code>accounts-password</code>: This package will allow users to log in with passwords. When you add it the <code>loginButtons</code> dropdown will automatically gain email and password fields.": "<code>accounts-password</code>: このパッケージはユーザがパスワードでログインできるようにするものです。このパッケージを追加すると、<code>loginButtons</code>のドロップダウンに自動でemailとパスワードのフィールドが追加されます。",
  "<code>accounts-facebook</code>, <code>accounts-google</code>, <code>accounts-github</code>, <code>accounts-twitter</code>, and community packages for other services will allow your users to log in with their accounts from other websites. These will automatically add buttons to the <code>loginButtons</code> dropdown.": "<code>accounts-facebook</code>や<code>accounts-google</code>や<code>accounts-github</code>や<code>accounts-twitter</code>や、その他サービス向けのコミュニティパッケージは、ユーザが他のサイトのアカウントでログインできるようにするものです。自動で<code>loginButtons</code>のドロップダウンにログイン用のボタンが追加されます。",
  "<code>username</code>: a unique String identifying the user.": "<code>username</code>: ユーザを識別するユニークな文字列。",
  "<code>emails</code>: an Array of Objects with keys <code>address</code> and <code>verified</code>; an email address may belong to at most one user. <code>verified</code> is a Boolean which is true if the user has <a href=\"#accounts_verifyemail\">verified the address</a> with a token sent over email.": "<code>emails</code>: オブジェクトの配列で、オブジェクトは<code>address</code>と<code>verified</code>というプロパティを持つ。emailアドレスは一人のユーザに固有である必要がある。<code>verified</code>はBooleanで、ユーザがメールで遅られたトークンで認証して<a href=\"#accounts_verifyemail\">verified the address</a>となった場合にtrueとなる。",
  "<code>createdAt</code>: the Date at which the user document was created.": "<code>createdAt</code>: ユーザドキュメントが作成された日時。",
  "<code>profile</code>: an Object which (by default) the user can create and update with any data.": "<code>profile</code>: (デフォルトでは)ユーザが任意のデータを作成したり更新したりできるオブジェクト。",
  "<code>services</code>: an Object containing data used by particular login services. For example, its <code>reset</code> field contains tokens used by <a href=\"#accounts_forgotpassword\">forgot password</a> links, and its <code>resume</code> field contains tokens used to keep you logged in between sessions.": "<code>services</code>: 個別のログインサービスがデータを格納するオブジェクト。例えば、その<code>reset</code>フィールドは<a href=\"#accounts_forgotpassword\">forgot password</a>のリンクで使われるトークンを保持する、また、<code>resume</code>フィールドはセッションを横断してログイン状態を維持するためのトークンを保持する。",
  "<code>type</code>: Either &quot;method&quot; or &quot;subscription&quot;": "<code>type</code>: &quot;method&quot;もしくは&quot;subscription&quot;",
  "<code>name</code>: The name of the method or subscription being called": "<code>name</code>: 呼び出されるメソッドやsubscriptionの名前",
  "<code>userId</code>: The user ID attempting the method or subscription": "<code>userId</code>: メソッドやsubscriptionを呼び出そうとしているユーザID",
  "<code>connectionId</code>: A string representing the user&apos;s DDP connection": "<code>connectionId</code>: ユーザのDDPコネクションの文字列表現",
  "<code>clientAddress</code>: The IP address of the user": "<code>clientAddress</code>: ユーザのIPアドレス",
  "The different types of MongoDB collections in Meteor, and how to use them.": "Meteorにおいての、異なる種類のMongoDB コレクションとそれらの使い方。",
  "How to define a schema for a collection to control its content.": "コレクションの内容をコントロールするためのスキーマの定義の仕方。",
  "What to consider when defining your collection&#x2019;s schema.": "あなたのコレクションのスキーマを定義するとき、考慮することは何か。",
  "How to enforce the schema when writing to a collection.": "コレクションに書き込みをするときのスキーマの強制させ方。",
  "How to carefully change the schema of your collection.": "あなたのコレクションのスキーマの慎重な変更の仕方。",
  "How to deal with associations between records.": "レコード同士の関連の扱い方。",
  "We specify that the <code>name</code> field of a list is required and must be a string.": "<code>name</code> フィールドを、必須で、文字列であることを指定しています。",
  "We specify the <code>incompleteCount</code> is a number, which on insertion is set to <code>0</code> if not otherwise specified.": "<code>incompleteCount</code> は、数値で、insertの時なにも指定がなければ、 <code>0</code>をセットすることを指定しています。",
  "We specify that the <code>userId</code>, which is optional, must be a string that looks like the ID of a user document.": "<code>userId</code> は、オプショナルで、ユーザードキュメントのIDのような文字でなければならないと指定しています。"
}